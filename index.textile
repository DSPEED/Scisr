---
layout: default
title: <strong class="name">Scisr</strong><span class="connect">, </span><span class="description">a refactoring tool for PHP</span>
github_name: Scisr
current_version: 0.2.1
nav:
  - name: About
    link: "about"
  - name: Usage
    link: "usage"
  - name: Installation
    link: "installation"
  - name: Bugs & Suggestions
    link: "bugs"
  - name: License
    link: "license"
---

{% comment %}
Inspired by Aaron Quint, http://www.quirkey.com/blog/2009/05/01/github-pages-for-fun-and-win/
{% endcomment %}

h2(#about). About

<span class="title-acronym">Sc</span>isr is an <span class="title-acronym">i</span>mperfect but <span class="title-acronym">s</span>imple <span class="title-acronym">r</span>efactorer. It is written in and for PHP.

I like to pronounce "Scisr" with a hard 'c' sound.

_Scisr is imperfect._ Because PHP is weakly and dynamically typed, a refactorer will never make the right decision in every imaginable case. Scisr accepts this limitation and settles for trying to do the thing that is most likely to be right. When in doubt, Scisr errs on the side of caution.

_Scisr is simple._ Scisr doesn't tell you how to structure your work. Scisr assumes you are doing smart things like using a version control system and testing the changes Scisr makes, but it doesn't try to dictate those parts of the process. Scisr sticks to doing what Scisr does best.

h2(#usage). Usage

h3. Rename a class

{% highlight bash %}
$ scisr.php rename-class OldName NewName [files]
{% endhighlight %}

Rename a class, changing all references to that class in your code and PHPDoc.

h3. Rename a class method

{% highlight bash %}
$ scisr.php rename-method OwningClassName oldMethodName newMethodName [files]
{% endhighlight %}

Rename a class method. Tries to guess variable types so as to only rename methods called on objects of the correct class.

Additional options:

{% highlight bash %}
    --with-inheritance          Rename the method in children of the given class as well.
{% endhighlight %}

h3. Rename a file

{% highlight bash %}
$ scisr.php rename-file old/file_name new/dir/new_file_name [files]
{% endhighlight %}

Rename a file, and try to modify require and include statements appropriately.

At the current time, this command is a bit simplistic in which filenames it will detect.

h3. Rename a class and containing file

{% highlight bash %}
$ scisr.php rename-class-file OldClassName NewClassName [files]
{% endhighlight %}

Rename a class, and rename the class' file if the name matches (for example, a class named Foo in Foo.php, or a class named Foo_Bar_Baz in Foo/Bar/Baz.inc).

h3. General

The last arguments to @scisr.php@ are any number of directory or file names. These designate the code to be refactored.

Additional options:

{% highlight bash %}
    -t, --timid                 Do not make changes to the files, just list filenames with line numbers.
    -a, --aggressive            Make changes even when we're not sure they're correct.
    -e<extensions>, --extensions=<extensions>
                                Specify a comma-separated list of allowed file extensions.
    -i<patterns>, --ignore=<patterns>
                                Specify a comma-separated list of patterns used to ignore directories and files.
    -h, --help                  Print usage instructions.
{% endhighlight %}


h2(#installation). Installation

You will need PHP 5. Currently Scisr probably only works on Unix-like systems.

# "Download Scisr":http://github.com/youngian/{{ page.github_name }}/archives/{{ page.current_version }}.
# You can run Scisr right from the folder where you unpacked it. Or, if you'd prefer, you can move @scisr.php@ to somewhere in your executable path, and move everything else to a PHP include directory.

h2(#bugs). Report Bugs / Request Features

If you find a bug or would like to request a feature, please "open an issue through GitHub":http://github.com/youngian/{{ page.github_name }}/issues.

h2(#license). License

h3(gpl). GPL Version 3

Scisr is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

Scisr is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

For more details, see "http://www.gnu.org/licenses/gpl.html":http://www.gnu.org/licenses/gpl.html.

